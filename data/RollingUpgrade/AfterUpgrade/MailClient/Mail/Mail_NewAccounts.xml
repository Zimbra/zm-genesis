<t:tests xmlns:t="urn:zimbraTestHarness">

<!-- Shared variables between Pre and Post upgrade scripts -->

<t:property name="account4.name" value="rollingupgrade04@${defaultdomain.name}"/>
<t:property name="account5.name" value="rollingupgrade05@${defaultdomain.name}"/>
<t:property name="account6.name" value="rollingupgrade06@${defaultdomain.name}"/>


<t:property name="compose.subject" value="After Rolling Upgrade Subject of the message is testing"/>
<t:property name="compose.content" value="After Rolling Upgrade Content in the message is contents..."/>

<!-- End shared variables -->


<t:test_case testcaseid="Briefcase_Folder_Setup" type="always" >
    <t:objective>basic system check</t:objective>

	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>	
    <t:test id="ping" required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>
	
	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
	
    <t:test required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test>
		<t:request>
			<GetAccountRequest xmlns="urn:zimbraAdmin">
				<account by="name">${account4.name}</account>
			</GetAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:GetAccountResponse/admin:account" attr="id"  set="account4.id"/>
			<t:select path='//admin:GetAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account4.server"/>
		</t:response>
	</t:test>
 
    <t:test>
		<t:request>
			<GetAccountRequest xmlns="urn:zimbraAdmin">
				<account by="name">${account5.name}</account>
			</GetAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:GetAccountResponse/admin:account" attr="id"  set="account5.id"/>
			<t:select path='//admin:GetAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account5.server"/>
		</t:response>
	</t:test>

 </t:test_case>  
 
<t:test_case testcaseid="AfterRolUpgrade_mail_NewAccounts" type="smoke" >
 <t:objective>Make a coversation between account4 and account5 </t:objective>
 
 <t:property name="server.zimbraAccount" value="${account4.server}"/>

    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account4.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:test >
		<t:request>
		   <SendMsgRequest xmlns="urn:zimbraMail">
		     <m>
		       <e t="t" a='${account4.name}'/>
		       <e t="c" a='${account5.name}'/>
		       <su>${compose.subject}</su>
		       <mp ct="text/plain">
			    <content> ${compose.content} </content>
		       </mp>
		    </m>
		  </SendMsgRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SendMsgResponse"/>
		</t:response>
	</t:test>
	
	<t:property name="server.zimbraAccount" value="${account5.server}"/>

    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account5.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
	<t:test required="true">
        <t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="message">
				<query>subject:(${compose.subject})</query>
			</SearchRequest>
        </t:request>
        <t:response>      
            <t:select path="//mail:SearchResponse">
            	<t:select path="//mail:m" attr="id" set="message1.id"/>
            </t:select>
        </t:response>
    </t:test>
    
    <t:test  >
	  <t:request>
	    <SendMsgRequest xmlns="urn:zimbraMail">
	      <m origid="${message1.id}" rt="r">
			<e t="t" a='${account4.name}'/>			
			<su>RE ${compose.subject} </su>
			<mp ct="text/plain">
		    	<content>Reply to ${compose.content}</content>
			</mp>
	     </m>
	    </SendMsgRequest>
	  </t:request>
	  <t:response>
		 <t:select path="//mail:SendMsgResponse/mail:m"/>
	   </t:response>
	</t:test>
	
	<t:property name="server.zimbraAccount" value="${account4.server}"/>

    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account4.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="conversation" sortBy="dateDesc" offset="0" limit="25">
                <query>subject:RE ${compose.subject}</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:c" attr="id" set="conv1.id"/>
        </t:response>
    </t:test>
	
</t:test_case>
    
</t:tests>