<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE stax SYSTEM "stax.dtd">
<stax>
    
    <defaultcall function="runQtp"/>
    
    <function name="qtpSetup" scope="local"> <!-- Execute some test-->
        <function-map-args>
            
            <function-required-arg name="sut">
            </function-required-arg>
            
            <function-required-arg name="machine">
            </function-required-arg>
            
            <function-required-arg name="logDir">
            </function-required-arg>
            
        </function-map-args>
        
        <sequence>
            <script> rName = "QTP EXECUTE %s"%areas</script>
            <script> rFile = 'C:\opt\qa\QTP\data\QTP\SetupTestBedForQTP.xml'</script>
            <log>'Run QTP Setup with sut %s machine %s rFile %s logDir %s' %(sut, machine, rFile, logDir)</log>
            <stafcmd name="rName">
                <location>machine</location>
                <service>'QTP'</service>
                <request>'EXECUTE %s DIRECTORY %s ZIMBRAQAROOT C:\opt\qa\QTP LOG %s' % (sut, rFile, logDir)</request>
            </stafcmd>
            <script>soapResult = STAFResult</script>
            <return>STAFResult</return>
        </sequence>
        
    </function>
    
    <function name="qtpTest" scope="local"> <!-- Execute some test-->
        <function-map-args>
            
            <function-required-arg name="sut">
            </function-required-arg>
            
            <function-required-arg name="machine">
            </function-required-arg>
            
            <function-required-arg name="logDir">
            </function-required-arg>
            
            <function-required-arg name="bits">
            </function-required-arg>
            
        </function-map-args>
        
        <sequence>
            <script> rName = "QTP EXECUTE %s"%areas</script>
            <script> rFile = 'C:\opt\qa\QTP\data\QTP\Scripts'</script>
            <log>'Run QTP Scripts with sut %s machine %s rFile %s logDir %s' %(sut, machine, rFile, logDir)</log>
            <log>'EXECUTE %s DIRECTORY %s ZIMBRAQAROOT C:\opt\qa\QTP %s BITS %s LOG %s' % (sut, rFile, areas, bits, logDir)</log>
            <stafcmd name="rName">
                <location>machine</location>
                <service>'QTP'</service>
                <request>'EXECUTE %s DIRECTORY %s ZIMBRAQAROOT C:\opt\qa\QTP %s BITS %s LOG %s' % (sut, rFile, areas, bits, logDir)</request>
            </stafcmd>
            <script>soapResult = STAFResult</script>
            <return>STAFResult</return>
        </sequence>
    </function>
    
    <function name="qtpReport" scope="local"> <!-- Execute some test-->
        <function-map-args>
            
            <function-required-arg name="sut">
            </function-required-arg>
            
            <function-required-arg name="machine">
            </function-required-arg>
            
            <function-required-arg name="logDir">
            </function-required-arg>
            
        </function-map-args>
        
        <sequence>
            <script> rName = "QTP EXECUTE %s"%areas</script>
            <script> rFile = 'C:\opt\qa\QTP\data\QTP\SendEmail.xml'</script>
            <log>'Run QTP Report with sut %s machine %s rFile %s logDir %s' %(sut, machine, rFile, logDir)</log>
            <stafcmd name="rName">
                <location>machine</location>
                <service>'QTP'</service>
                <request>'EXECUTE %s DIRECTORY %s ZIMBRAQAROOT C:\opt\qa\QTP LOG %s' % (sut, rFile, logDir)</request>
            </stafcmd>
            <script>soapResult = STAFResult</script>
            <return>STAFResult</return>
        </sequence>
    </function>
    
    <function name="runQtp" scope="local">
        
        <function-prolog> Main entry point to set up global variables </function-prolog>
        
        <function-map-args>
            
            <function-optional-arg name="sut" default="'qa07'"> Name of the System Under Test (localhost) </function-optional-arg>
            
            <function-optional-arg name="areas" default="'NONE'"> Name of the test areas to execute, ie. calendar, mail, etc. (None) </function-optional-arg>
            
            <function-optional-arg name="logareas" default="'INSTALL'"> path name for areas for logging purpose </function-optional-arg>
            
            <function-optional-arg name="bits" default="'network'"> Name of the Zimbra bits that are running on the SUT (network) </function-optional-arg>
            
            <function-optional-arg name="machine" default="'qapc02'"> Name of the target machine </function-optional-arg>
            
            <function-optional-arg name="OS" default="'RHEL4'"> Name of the operation system </function-optional-arg>
            
            <function-optional-arg name="build" default="'foo'"> Name of the build </function-optional-arg>
            
            <function-optional-arg name="branch" default="'mebranch'"> Name of the branch </function-optional-arg>
            
            <function-optional-arg name="timestamp" default="'whenever'"> Time Stamp </function-optional-arg>
            
            <function-optional-arg name="needNotify" default="'1'"> Is notification required? 1= yes others = no </function-optional-arg>
            
            <function-optional-arg name="notificationAlias" default="'qa-automation@zimbra.com'"> This is email notification alias </function-optional-arg>
            
            <function-optional-arg name="smokeOrFull" default="'1'"> Run Smoke or Full test, 1 == smoke 0 == full </function-optional-arg>
            
            <function-optional-arg name="needSetUp" default="'1'"> Need setting up test ware </function-optional-arg>
            
            <function-optional-arg name="browser" default="'FF2.0'"> Browser to use </function-optional-arg>
			
			<function-optional-arg name="tms" default="'tms.lab.zimbra.com'">Location of TMS server </function-optional-arg>
            <function-optional-arg name="tmsStax" default="'tms-stax.lab.zimbra.com'">Location of STAX server </function-optional-arg>
            
        </function-map-args>
        
        <sequence>  
            
            <stafcmd name="'Remove QTP Service'">
                <location>machine</location>
                <service>'service'</service>
                <request>'REMOVE SERVICE QTP'</request>
            </stafcmd>
            
            <if expr="needSetUp=='1'">
                <sequence>
                    <log>'Set up QTP testware'</log>
                    <process name="'Remove Current Testware'">
                        <location>machine</location>
                        <command mode="'shell'">'rmdir'</command>
                        <workdir>'C:\opt\qa'</workdir>
                        <parms>'C:\opt\qa\QTP /S /Q'</parms>
                    </process>
                    
                    <script>origDir = "/qa/%s/QTP/" % branch</script>
                    <script>cutDir = "2"</script>
                    <stafcmd>
                        <location>tms</location>
                        <service>'fs'</service>
                        <request>'query entry /opt%s'%origDir</request>
                    </stafcmd>
                    <if expr="RC != 0">
                        <sequence>
                            <script>origDir = "/qa/QTP/"</script>
                            <script>cutDir = "1"</script>
                        </sequence>
                    </if>
                    
                     <process name="'Copy Testware'">
                        <location>machine</location>
                        <command>'wget'</command>
                        <workdir>'C:\opt\qa'</workdir>
                        <parms>'--no-proxy -r http://%s%s  --level=0 - --waitretry=1 --tries=0 -q -nH -np -P C:\opt\qa --cut-dir=%s' % (tms, origDir, cutDir)</parms>
                    </process>   
                    
                    <process name="'Maniuplate property file'">
                        <location>machine</location>
                        <command mode="'shell'">'echo'</command>
                        <workdir>'C:\opt\qa'</workdir>
                        <parms>'Browser=%s'%browser</parms>
                        <stdout mode="'append'">'C:\opt\qa\QTP\conf\global.properties'</stdout>
                    </process>
                </sequence>
            </if>
            
            <stafcmd name="'Sleep 10 seconds'">
                <location>tmsStax</location>
                <service>'DELAY'</service>
                <request>'DELAY 10000'</request>
            </stafcmd>
            
            <stafcmd name="'Add QTP Service'">
                <location>machine</location>
                <service>'service'</service>
                <request>'ADD SERVICE QTP LIBRARY JSTAF EXECUTE /opt/qa/QTP/bin/zimbrastaf.jar OPTION JVMName=QtpJVM OPTION J2=-Xmx512m'</request>
            </stafcmd>
            
            <stafcmd name="'Remove Previous Report Data'">
                <location>machine</location>
                <service>'fs'</service>
                <request>'DELETE ENTRY C:\opt\qa\QTP\Results CHILDREN RECURSE CONFIRM'</request>
            </stafcmd>
            
            <if expr="areas=='NONE'">
                <sequence>
                    <if expr="smokeOrFull == '1'">
                        <sequence>
                            <script>areas="smoke"</script>
                            <script>logareas = "smoke"</script>
                        </sequence>
                        <else>
                            <sequence>
                                <script>areas="functional"</script>
                                <script>logareas = "full"</script>
                            </sequence>
                        </else>
                    </if>                   
                    <script>areas = "TYPES %s" % (areas)</script>
                </sequence>
            </if>
            
            <script>logDir = "/opt/qa/testlogs/%s/%s/%s/qtp/%s/%s/%s/" % (OS, branch, build, logareas, timestamp, sut)</script>
            <script>NTlogDir = 'T:\\%s\\%s\\%s\\qtp\\%s\\%s\\%s\\' % (OS, branch, build, logareas, timestamp, sut)</script>
            <script>meURL = "http://%s/testlogs/%s/%s/%s/qtp/%s/%s/%s/ " % (tms, OS, branch, build, logareas, timestamp, sut)</script>
            <process name="'Create Log Directory'">
                <location>tms</location>
                <command>'/bin/mkdir'</command>
                <workdir>'/opt/qa'</workdir>
                <parms>'-p %s'% (logDir)</parms>
            </process>
            <call function="'qtpSetup'"> {'sut' :sut, 'machine' :machine, 'logDir': NTlogDir} </call>
            <call function="'qtpTest'"> {'sut' : sut, 'machine' : machine, 'logDir' : NTlogDir, 'bits' : bits} </call>
            <script>qtpResult= STAXResult.replace("\\", "\\\\")</script>
         <!--   <call function="'qtpReport'"> {'sut' :sut, 'machine' :machine, 'logDir': NTlogDir} </call> -->
            <script>mlogareas = logareas.upper()</script>          
            <process name="'Report Test Summary'">
                        <location>tms</location>
                        <command>'/bin/env'</command>
                        <workdir>logDir</workdir>
                        <parms>'ruby /opt/qa/%s/genesis/reportResult.rb testsummary.txt QTP %s %s %s %s'% (branch, OS, build, branch, mlogareas)</parms>
            </process>
            <script> topdir='qtp'</script>
            <if expr="logareas == 'upgrade'">
                <script>topdir = 'zimbraInstall'</script>
            </if>            
            <stafcmd name="'Remove QTP Service'">
                <location>machine</location>
                <service>'service'</service>
                <request>'REMOVE SERVICE QTP'</request>
            </stafcmd>
            
            <script>omessage = 'Build %s tested on machine %s. Log file is at %s\n%s' % (build, machine, meURL, qtpResult)</script>
            
            <return>omessage</return>
        </sequence>
        
    </function>
    
</stax>
