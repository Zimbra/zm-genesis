<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE stax SYSTEM "stax.dtd">
<stax>  

    <defaultcall function="runSoap"/>  
 
    <function name="someTest" scope="local">		<!-- Execute some test-->
        <function-map-args>
                
            <function-required-arg name="sut">
            </function-required-arg>  

            <function-required-arg name="areas">
            </function-required-arg>

            <function-required-arg name="bits">
            </function-required-arg>  

            <function-required-arg name="machine">
            </function-required-arg>        

            <function-required-arg name="logDir">
            </function-required-arg>        

            <function-optional-arg name="excludes" default="'NONE'">EXCLUDES</function-optional-arg>
            
            <function-optional-arg name="admin" default="'NONE'">ADMIN server</function-optional-arg>
            
            <function-optional-arg name="domain" default="'NONE'">DOMAIN</function-optional-arg>

        </function-map-args>

	<sequence>
            <log>'Run Soap with sut %s areas %s bits %s' %(sut, areas, bits)</log>

            <script> rName = "SOAP EXECUTE %s"%areas</script>
            <script> mExtra = ""</script>
            <if expr="admin!='NONE'">
            	<script> mExtra = mExtra+" ADMIN %s" % admin</script>
            </if>
            <if expr="domain!='NONE'">
            	<script> mExtra = mExtra+" DOMAIN %s" % domain</script>
            </if>
            <if expr="excludes=='NONE'">
                <script>runMe = "EXECUTE %s%s ZIMBRAQAROOT /opt/qa/soapvalidator %s BITS %s LOG %s" % (sut, mExtra, areas, bits, logDir)</script>
                <else>
                        <script>runMe = "EXECUTE %s%s ZIMBRAQAROOT /opt/qa/soapvalidator %s BITS %s EXCLUDES %s LOG %s LOG4J /opt/qa/soapvalidator/conf/log4jSTAF.properties" % (sut, mExtra, areas, bits, excludes, logDir)</script>
                </else>
            </if>
            <log>'running %s'%runMe</log>
                <stafcmd name="rName">
                      	<location>machine</location>
                        <service>'Soap'</service>
			<request>runMe</request>
		</stafcmd>
            <script>soapResult = STAFResult</script>
            <return>STAFResult</return>
	</sequence>

    </function>


    <function name="runSoap" scope="local">
    
        <function-prolog>
            Main entry point to set up global variables
        </function-prolog>
        
        <function-map-args>
                
            <function-optional-arg name="sut" default="'localhost'">
                Name of the System Under Test (localhost)
            </function-optional-arg>  

            <function-optional-arg name="areas" default="'NONE'">
                Name of the test areas to execute, ie. calendar, mail, etc. (None)
            </function-optional-arg>

            <function-optional-arg name="logareas" default="'INSTALL'">
               path name for areas for logging purpose
            </function-optional-arg>

            <function-optional-arg name="bits" default="'network'">
                Name of the Zimbra bits that are running on the SUT (network)
            </function-optional-arg>  

            <function-optional-arg name="machine" default="'qa03'">
                Name of the target machine
            </function-optional-arg>

            <function-optional-arg name="OS" default="'RHEL4'">
                Name of the operation system
            </function-optional-arg>        

            <function-optional-arg name="build" default="'foo'">
                Name of the build
            </function-optional-arg>        

            <function-optional-arg name="branch" default="'mebranch'">
                Name of the branch
            </function-optional-arg>

            <function-optional-arg name="timestamp" default="'whenever'">
                Time Stamp
            </function-optional-arg>

            <function-optional-arg name="needNotify" default="'1'">
                Is notification required? 1= yes others = no
            </function-optional-arg>  

            <function-optional-arg name="notificationAlias" default="'qa-automation@zimbra.com'">
                This is email notification alias
            </function-optional-arg>  

            <function-optional-arg name="smokeOrFull" default="'1'">
                Run Smoke or Full test, 1 == smoke 0 == full 
            </function-optional-arg>  

            <function-optional-arg name="needSetUp" default="'1'">
               Need setting up test ware
            </function-optional-arg>
	
            <function-optional-arg name="tms" default="'tms.lab.zimbra.com'">Location of TMS server </function-optional-arg>
            <function-optional-arg name="tmsStax" default="'tms-stax.lab.zimbra.com'">Location of STAX server </function-optional-arg>
            <function-optional-arg name="excludes" default="'NONE'">EXCLUDES</function-optional-arg>
               
            <function-optional-arg name="admin" default="'NONE'">ADMIN server</function-optional-arg>
            
            <function-optional-arg name="domain" default="'NONE'">DOMAIN</function-optional-arg>
            

        </function-map-args>
        
		<sequence>          

            <if expr="needSetUp=='1'">
                <sequence>     
                    <log>'Set up SOAP testware'</log>  
                    <process name ="'Remove Current Testware'">
                        <location>machine</location>
                        <command>'/bin/rm'</command>
                        <workdir>'/opt/qa'</workdir>
                        <parms>'-r -f soapvalidator'</parms>
                    </process>     
                
                    <script>
                        origDir = "/qa/%s/soapvalidator/" % branch
                        cutDir = "2"
                    </script>
		            <stafcmd>
		                <location>tms</location>
            		    <service>'fs'</service>
                        <request>'query entry /opt%s'%origDir</request>
		            </stafcmd>
		            <if expr="RC != 0">
		                <script>
                            origDir = "/qa/soapvalidator/"
                            cutDir = "1"
                        </script>
		            </if>
        
                    <log>'-r http://%s%s  --level=0 - --waitretry=1 --tries=0 -q -nH -np -P /opt/qa -R index.html --cut-dir=%s' % (tms, origDir, cutDir)</log>
                    <process name="'Copy Testware'">
                        <location>machine</location>
                        <command>'wget'</command>
                        <workdir>'/var/tmp'</workdir>
                        <parms>'--no-proxy -r http://%s%s  --level=0 - --waitretry=1 --tries=0 -q -nH -np -P /opt/qa -R index.html --cut-dir=%s' % (tms, origDir, cutDir)</parms>
                    </process>   
    
                    <script>fullName = machine</script>
                    <script>replaceMe = "perl -pi.bak1 -e 's#localhost#%s#' global.properties\nperl -pi.bak2 -e 's#([^.])zimbra.com#$1%s#' global.properties \nperl -pi.bak3 -e 's#propertiesFolder=.*#propertiesFolder=/opt/qa/soapvalidator/tmp#' global.properties"%(fullName,fullName)</script>
    
                    <stafcmd>
                        <location>machine</location>
                        <service>'fs'</service>
                        <request>'query entry /opt/qa/soapvalidator/conf/global.properties.%s'%fullName</request>
                    </stafcmd>
                    <if expr="RC == 0">
                        <sequence>
                            <stafcmd>
                                <location>machine</location>
                                <service>'fs'</service>
                                <request>'COPY FILE /opt/qa/soapvalidator/conf/global.properties.%s TOFILE /opt/qa/soapvalidator/conf/global.properties TOMACHINE %s'%(fullName, machine)</request>
                            </stafcmd>
                        </sequence>
                    </if>
                    <process name ="'Create customization script'">
                        <location>machine</location>
                        <command>'/bin/echo'</command>
                        <workdir>'/opt/qa/soapvalidator/conf'</workdir>
                        <parms>replaceMe</parms>
                        <stdout>'/tmp/replaceMe.ksh'</stdout>
                    </process>
               <!--
               <process name="'Global file customization'">
                    <location>machine</location>
                    <command>'/bin/bash'</command>
                    <workdir>'/opt/qa/soapvalidator/conf'</workdir>
                    <parms>'/tmp/replaceMe.ksh'</parms>                 
                </process>  
                --> 
            
                    <process name="'Make tmp'">
                        <location>machine</location>
                        <command>'/bin/env'</command>
                        <workdir>'/opt/qa/soapvalidator'</workdir>
                        <parms>'mkdir /opt/qa/soapvalidator/tmp'</parms>
                    </process>
                </sequence>
            </if>

            <stafcmd name="'Remove SOAP Service'">
                <location>machine</location>
                <service>'service'</service>
                <request>'REMOVE SERVICE SOAP'</request>
            </stafcmd>
   
            <stafcmd name="'Sleep 10 seconds'">
                <location>tmsStax</location>
                <service>'DELAY'</service>
                <request>'DELAY 10000'</request>
            </stafcmd>

            <if expr="OS=='MACOSXx86_10.6'">
	      <script>serviceCommand = 'ADD SERVICE SOAP LIBRARY JSTAF EXECUTE /opt/qa/soapvalidator/bin/zimbrastaf.jar OPTION JVMName=SoapJVM OPTION J2=-Xmx512m OPTION JVM=/System/Library/Frameworks/JavaVM.framework/Versions/1.5/Commands/java'</script>
              <else>
                   <script>serviceCommand = 'ADD SERVICE SOAP LIBRARY JSTAF EXECUTE /opt/qa/soapvalidator/bin/zimbrastaf.jar OPTION JVMName=SoapJVM OPTION JVM=/opt/zimbra/common/lib/jvm/java/bin/java OPTION J2=-Xmx512m'</script>
	      </else>
	    </if>
            <log>'Soap service command %s' % (serviceCommand)</log>

            <stafcmd name="'Add SOAP Service'">
                <location>machine</location>
                <service>'service'</service>
                <request>serviceCommand</request>
            </stafcmd>    
 
            <if expr="areas=='NONE'">
                <sequence>
                    <if expr="smokeOrFull == '1'">
                        <sequence>
                            <script>areas="SMOKE"</script>   
                        </sequence>
                        <else>
                             <sequence>
                                <script>areas="FULL"</script> 
                             </sequence>
                        </else>
                    </if>
                    <script>logareas = areas.lower()</script>
                    <script>areas = "SUITE %s" % (areas)</script>
                </sequence>
            </if> 
 
            <script>logDir = "/opt/qa/testlogs/%s/%s/%s/soap/%s/%s/%s/" % (OS, branch, build, logareas, timestamp, machine)</script>     
            <script>meURL = "http://%s/testlogs/%s/%s/%s/soap/%s/%s/%s/ " % (tms, OS, branch, build, logareas, timestamp, machine)</script> 
            <process name ="'Create Log Directory'">
                <location>tms</location> 
                <command>'/bin/mkdir'</command>
                <workdir>'/opt/qa'</workdir>
                <parms>'-p %s'% (logDir)</parms>
            </process>  
            <call function="'someTest'"> 
                {'sut' : sut, 'machine' : machine, 'areas' : areas, 'bits' : bits, 'logDir' : logDir, 'excludes' : excludes, 'admin' : admin, 'domain' : domain}
            </call>
            <script>soapResult=STAXResult</script>
            <script>
                import re
                topdir='soapvalidator'
                if re.match(".*/zimbraInstall/soapScripts/(pre|post)Upgrade", areas) != None:
                     topdir = 'zimbraInstall'
            </script>
            <log>'Run Soap report'</log>
              
            <stafcmd name="'Run Generation Logic'">
                <location>tmsStax</location>
                <service>'ngresult'</service>
                <request>'REPORT ROOT %s'%logDir</request>
            </stafcmd>

            <stafcmd name="'Remove SOAP Service'">
                <location>machine</location>
                <service>'service'</service>
                <request>'REMOVE SERVICE SOAP'</request>
            </stafcmd>

            <script>omessage = "Build %s tested on machine %s.  Log file is at %s\n%s" % (build, machine, meURL, soapResult)</script>  
        
            <if expr="needNotify == '1'">
                <sequence>   
                    <log message="1">'Publish Result'</log>      
                    <script>mlogareas = logareas.upper()</script>               
                    <process name="'Test Summary'">
                        <location>tms</location>
                        <command>'/bin/env'</command>
                        <workdir>logDir</workdir>
                        <parms>'ruby /opt/qa/%s/genesis/reportResult.rb testsummary.txt SOAP %s %s %s %s %s'% (branch, OS, build, branch, mlogareas, meURL)</parms>
                    </process>    
                    <log>'Get report File'</log>
                    <stafcmd>
                        <location>machine</location>
                        <service>'fs'</service> 
                        <request>'GET FILE %sBugReports/BugReport.txt'% (logDir)</request> 
                    </stafcmd>             
                    <script>soapres=STAFResult</script>
                    <script>omessage="%s\n%s"%(omessage, soapres)</script>
                    <log>'Send out notificaiton'</log>                         
                    <timer duration="'5m'">
                        <stafcmd name="'Send Completion Email'">
                            <location>tmsStax</location>
                            <service>'EMAIL'</service>
                            <request>'SEND TO %s FROM qa-tms@zimbra.com message "%s" SUBJECT "%s %s Soap %s completed"'% (notificationAlias, omessage, OS, branch, logareas)</request>
                        </stafcmd>
                    </timer> 
                </sequence>
            </if>
         
            <return>omessage</return>
		</sequence>

    </function>

</stax>   
