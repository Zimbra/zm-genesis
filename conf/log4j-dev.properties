# An example log4j configuration file that outputs to System.out.  The
# output information consists of relative time, log level, thread
# name, logger name, nested diagnostic context and the message in that
# order.

# For the general syntax of property based configuration files see the
# documenation of org.apache.log4j.PropertyConfigurator.

rootLogger.level=WARN
rootLogger.appenderRef.stdout.ref=ConsoleLogger

logger.zimbra.name=com.zimbra
logger.zimbra.level=WARN, A1
logger.zimbra.additivity=false
logger.zimbra.appenderRef.A1.ref=ConsoleLogger

logger.qa.name=zimbra.qa.trace
logger.qa.level=INFO
logger.qa.additivity=false

logger.result.name=zimbra.qa.trace.result
logger.result.level=INFO, A1
logger.result.additivity=false
logger.result.appenderRef.A1.ref=ConsoleLogger

# A1 is set to be a ConsoleAppender which outputs to System.out.
appender.A1.type=Console
appender.A1.name=ConsoleLogger
appender.A1.layout.type=PatternLayout
# The conversion pattern uses format specifiers. You might want to
# change the pattern an watch the output format change.
#appender.A1.layout.pattern=%-4r %-5p [%t] %c{1} - %m%n
#appender.A1.layout.pattern=%-6r [%15.15t] %-5p %30.30c %x - %m\n
#appender.A1.layout.pattern=%-4r %-5p [%t] %37c %3x - %m%n

# Appender A2 writes to the file "test.log".
appender.A2.type=RollingFile
appender.A2.name=StafTestCore
appender.A2.fileName=StafTestCore.log
appender.A2.layout.pattern=%d %-5p [%t] [%z] %c{1} - %m%n
appender.A2.policies.type=Policies
appender.A2.policies.time.type=TimeBasedTriggeringPolicy
appender.A2.policies.time.interval=2
appender.A2.policies.time.modulate=true
appender.A2.strategy.type=DefaultRolloverStrategy

#appender.A2.layout.pattern=%d %-5p [%t] %c{1} - %m%n
#appender.A2.layout.pattern=%d %-5p [%t] %50c %3x - %m%n
